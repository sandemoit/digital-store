name: Deploy to VPS

on:
  push:
    branches: [ dev ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.VPS_SSH_KEY }}
        known_hosts: 'just-a-placeholder-so-we-dont-get-errors'

    - name: Adding Known Hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

    - name: Prepare VPS Directory
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }} \
          "sudo mkdir -p ${{ secrets.PROJECT_PATH }} && \
          sudo chown -R ${{ secrets.VPS_USERNAME }}:www-data ${{ secrets.PROJECT_PATH }} && \
          sudo chmod -R 775 ${{ secrets.PROJECT_PATH }}"

    - name: Copy files via SSH
      run: |
        rsync -avzh --delete --info=progress2 \
          --exclude='.git' \
          --exclude='.github' \
          --exclude='node_modules' \
          --exclude='vendor' \
          --exclude='tests/' \
          --exclude='.idea' \
          --exclude='*.sqlite' \
          -e "ssh -o StrictHostKeyChecking=no" \
          ./ ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }}:${{ secrets.PROJECT_PATH }}

    - name: Run post-deploy commands
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.VPS_USERNAME }}@${{ secrets.VPS_HOST }} \
          "cd ${{ secrets.PROJECT_PATH }} && \
          # Set permissions
          sudo chown -R www-data:www-data bootstrap/cache storage public/build && \
          sudo chmod -R 775 bootstrap/cache storage public/build && \
          # Install dependencies
          composer install --prefer-dist --no-interaction --optimize-autoloader && \
          npm ci --no-audit --no-fund --omit=dev && \
          npm run build:ssr && \
          # Decrypt .env file
          php artisan env:decrypt --env=staging --key=3UVsEgGVK36XN82KKeyLFMhvosbZN1aF && \
          mv .env.staging .env && \
          # Laravel setup
          php artisan key:generate --force && \
          php artisan config:clear && \
          php artisan view:clear && \
          php artisan route:clear && \
          php artisan cache:clear && \
          php artisan optimize && \
          php artisan storage:link --force && \
          php artisan migrate --force"

